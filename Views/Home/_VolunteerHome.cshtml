@model TomorrowsVoice_Toplevel.ViewModels.HomeVolunteerVM

<div class="row">
	<div class="col-5">
		<div class="card">
			<div class="card-header position-relative">
                <svg id="progress-circle" width="250" height="250" viewBox="0 0 250 250"
                     class="circular-progress" style="--max:0;">
                    <circle class="bg"></circle>
                    <circle class="fg"></circle>
					@* <text  x="50%" y="50%" text-anchor="middle" dominant-baseline="middle" class="circle-text">0%</text> *@
				</svg>
			@* 	<span id="circle-text" class="circle-text count position-absolute">
					%
				</span> *@
			</div>
			<div class="card-body">
				<h5 class="card-title">
					@Html.Raw($"{Model.Progress}% Towards Your Yearly Goal of {Model.HourlyGoal} Hours!")
				</h5>
				<p class="card-subtitle mb2 text-muted">
					@Html.Raw($"You have volunteered {Math.Round(Model.TimeWorked.TotalHours, 2)} hours this year.")
				</p>
				<a href="#" class="card-link">Set a New Goal</a>
				<a href="#" class="card-link">See My Completed Shifts</a>
			</div>
		</div>
	</div>

	<div class="col-5 offset-2">
		<div class="card">
			<div class="card-body">
				<h5 class="card-title">
					Your Upcoming Shifts
				</h5>
				<ul class="list-group list-group-flush">
					@{
						if (Model.Shifts.Where(s => s.StartAt > DateTime.Today).Count() == 0)
						{
							<li class="list-group-item"><a class="card-link" asp-area="" asp-controller="Event" asp-action="Index">There's nothing here, click this to see available shifts!</a></li>
						}
						else
						{
							foreach (var shift in Model.Shifts.OrderByDescending(s => s.StartAt).Where(s => s.StartAt > DateTime.Today))
							{
								<li class="list-group-item">@Html.Raw($"{shift?.Event?.Name ?? shift?.Title ?? "(no title)"} on {shift?.DateFormat}")</li>
							}
						}
					}
				</ul>
			</div>
		</div>
	</div>
</div>