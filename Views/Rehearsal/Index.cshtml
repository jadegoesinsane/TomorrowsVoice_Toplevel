@model IEnumerable<TomorrowsVoice_Toplevel.Models.Rehearsal>

<partial name="_ViewHeading" />

<p>
	<a asp-action="Create">Create New @ViewData["ControllerFriendlyName"]</a>
</p>

<div>
	<form asp-action="Index" method="get">

		<input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
		<input type="hidden" name="sortField" value="@ViewData["sortField"]" />
		<div class="form-horizontal">
			<button class="btn @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
				Filter/Search @ViewData["numberFilters"]
			</button><br />
			<div class="collapse  @ViewData["ShowFilter"]" id="collapseFilter">
				<div class="card card-body bg-light">
					<div class="row">
						<div class="form-floating col-md-3">
							@Html.DropDownList("DirectorID", null, "All Directors", htmlAttributes: new { @class = "form-control", id = "DirectorID" })
							<label class="control-label" for="DirectorID">Select by Director:</label>
						</div>
						<div class="form-floating col-md-3">
							@Html.DropDownList("ChapterID", null, "All Chapters", htmlAttributes: new { @class = "form-control", id = "ChapterID" })
							<label class="control-label" for="ChapterID">Select by Chapter:</label>
						</div>
						<div class="form-floating col-md-3">
							@Html.TextBox("SearchString", null, new { @class = "form-control", id = "SearchString" })
							<label class="control-label" for="SearchString">Search Attendance Notes:</label>
						</div>
					</div>
					<div class="row mt-4">
						<div class="form-floating col-md-3">
							<input class="form-control" type="date" id="StartDate" name="StartDate" max="9999-12-12" value="@ViewData["StartDate"]" aria-invalid="false">
							<label class="control-label" for="StartDate">Start Date:</label>

						</div>
						<div class="form-floating col-md-3">
							<input class="form-control" type="date" id="EndDate" name="EndDate" max="9999-12-12" value="@ViewData["EndDate"]" aria-invalid="false">
							<label class="control-label" for="EndDate">End Date:</label>

						</div>
							<div class="col-md-2">
								<div class="form-floating">
									@Html.DropDownList("StatusFilter", (SelectList)ViewBag.StatusSelectList,
																		"All Status", htmlAttributes: new { @class = "form-control" })
									<label class="control-label" for="StatusFilter">Select by Status:</label>

								</div>

							</div>
						<div class="col-md-3 d-flex justify-content-evenly">
							<input type="submit" name="actionButton" value="Filter"
								   class="btn btn-outline-primary" />
							<a asp-action="Index" class="btn btn-outline-dark">Clear</a>
						</div>
					</div>

				</div>
			</div>
		</div>
		<h5 style="margin-top: 10px">@ViewData["AptCount"] results between @ViewData["StartDate"] and @ViewData["EndDate"]</h5>
		<table class="table">
			<thead>
				<tr>
					<th aria-label="Date">
						<input type="submit" name="actionButton" value="Date" class="btn btn-link" />
					</th>

					<th class="d-none d-lg-table-cell" aria-label="Director">Director</th>
					<th aria-label="Chapter">Chapter</th>
					<th aria-label="Attendances Rate">Attendances Rate</th>
					<th class="d-none d-sm-table-cell" aria-label="Attendances">Attendances</th>
					<th aria-label="Status">Status</th>
					<th aria-label="Actions"></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model)
				{
					<tr>
						<td>
							@Html.DisplayFor(modelItem => item.Summary)
						</td>

						<td class="d-none d-lg-table-cell">
							@Html.DisplayFor(modelItem => item.Director.NameFormatted)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Chapter.City.Name)
						</td>
						<td>

							@{
								var exercises = item.RehearsalAttendances.ToList();
								int exerciseCount = exercises.Count;
								@Html.Raw(exerciseCount)
							}/ @Html.DisplayFor(modelItem => item.TotalSingers)

						</td>
						<td class="d-none d-sm-table-cell">
							@{
								int singerCount = item.RehearsalAttendances.Count;
								if (singerCount > 0)
								{
									string firstSinger = item.RehearsalAttendances.FirstOrDefault().Singer.NameFormatted;
									if (singerCount > 1)
									{
										string SingerList = "";
										var c = item.RehearsalAttendances.ToList();
										for (int i = 0; i < singerCount; i++)
										{
											SingerList += c[i].Singer.NameFormatted + " <br />";
										}
										<a class="" role="button" data-bs-toggle="collapse" href="#collapseSingers@(item.ID)"
										   aria-expanded="false" aria-controls="collapseSingers@(item.ID)">
											View all @singerCount attendees
										</a>
										<div class="collapse" id="collapseSingers@(item.ID)">
											@Html.Raw(SingerList)
										</div>
									}
									else
									{
										@firstSinger
									}
								}
								else
								{
									<p>No Attendance Data</p>
								}
							}
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Status)
						</td>
						<td>
							@if (item.Status != Status.Archived)
							{
									<partial name="_CrudIcons" model="@item.ID" />
							}
							else
							{
									<partial name="_CrudIconsRecover" model="@item.ID" />
							}
						</td>
					</tr>
				}
			</tbody>
		</table>
		<partial name="_PagingNavBar" />
	</form>
</div>
@section Scripts {
	<!--	<script type="text/javascript">
			$('.nav-link').click(function () {
				var activeTab = $(this).attr("id");
				switch (activeTab) {
					case 'Calendar-Tab': $('#CalendarPanel').load('/Rehearsal/RehearsalCalendar');
						break;
					default: break;
				};
			})
			</script>-->
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			var calendarEl = document.getElementById('calendar');
			var calendar = new FullCalendar.Calendar(calendarEl, {
				initialView: 'dayGridMonth',
				themeSystem: 'bootstrap5',
				events: '/Rehearsal/GetRehearsals',
				eventDisplay: 'block',
				headerToolbar: {
					start: 'title',
					center: '',
					end: 'prev,next today'
				},
				navLinks: true,
				navLinkDayClick: function (date) { window.location.href = '/Rehearsal/SetRehearsal?date=' + date.toISOString().split('T')[0] }
			});
			calendar.render();
		});
	</script>
}