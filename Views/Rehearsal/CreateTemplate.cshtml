@model TomorrowsVoice_Toplevel.Models.Events.Rehearsal

<div style="display: grid; place-content: center;">
    <partial name="_ViewHeading" />
    <form asp-action="CreateTemplate" class="form-container" method="post" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="row g-2 my-3 form-area justify-content-md-center" style="margin-top: 0px !important;">
            <!-- Weekday + Repeat Count -->
            
                <div class="col-md-3">
                    <div class="form-floating required">
                        <select name="selectedDayOfWeek" class="form-control">
                            @foreach (var day in Enum.GetValues(typeof(DayOfWeek)))
                            {
                                <option value="@day">@day</option>
                            }
                        </select>
                        <label>Choose Day of Week</label>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-floating required">
                    <input name="repeatCount" type="number" min="1" required class="form-control" value="1"
                           oninput="this.value = Math.max(1, this.value)" />
                        <label>Number of Rehearsals</label>
                    </div>
                </div>
           

            <div class="w-100" style="margin:0px;"></div>
            
                <div class="col-md-3">
                    <div class="form-floating required">
                        <input asp-for="StartAt" class="form-control" />
                        <label asp-for="StartAt" class="control-label"></label>
                        <span asp-validation-for="StartAt" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-floating required">
                        <input asp-for="EndAt" class="form-control" />
                        <label asp-for="EndAt" class="control-label"></label>
                        <span asp-validation-for="EndAt" class="text-danger"></span>
                    </div>
                </div>


            <div class="w-100" style="margin:0px;"></div>
           
                @if (!User.IsInRole("Director"))
                {
                    <div class="col-md-3">
                        <div class="form-floating required">
                            <select asp-for="ChapterID" class="form-control" id="Filter" onchange="filterByCity()" asp-items="ViewBag.ChapterID"></select>
                            <label asp-for="ChapterID" class="control-label"></label>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-floating required">
                            <select asp-for="DirectorID" class="form-control" asp-items="ViewBag.DirectorID"></select>
                            <label asp-for="DirectorID" class="control-label"></label>
                        </div>
                    </div>
                }
                else
                {
                    <select hidden asp-for="ChapterID" class="form-control" id="Filter" onchange="filterByCity()" asp-items="ViewBag.ChapterID"></select>
                    <select hidden asp-for="DirectorID" class="form-control" asp-items="ViewBag.DirectorID"></select>
                }


            <div class="w-100" style="margin:0px;"></div>
            
                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label class="control-label">Choose Singer(s)</label>
                            <button type="button" id="btnLeft" class="btn btn-success btn-sm"><strong>+</strong></button>
                            @Html.ListBox("availOptions", (MultiSelectList)ViewBag.availOpts, new { @size = 10, @class = "form-control", @style = "height: 250px; overflow-y: auto;" })
                        </div>
                        <div class="form-group col-md-6">
                            <label class="control-label">Singer(s) Added</label>
                            <button type="button" id="btnRight" class="btn btn-danger btn-sm"><strong>-</strong></button>
                            @Html.ListBox("selectedOptions", (MultiSelectList)ViewBag.selOpts, new { @size = 10, @class = "form-control", @style = "height: 250px; overflow-y: auto;" })
                        </div>
                    </div>
                </div>
           

            <!-- Note: Single row full width -->
            <div class="row justify-content-center mt-3">
                <div class="col-md-6">
                    <div class="form-floating">
                        <textarea asp-for="Note" class="form-control" style="height: 100px" placeholder="Notes"></textarea>
                        <label asp-for="Note" class="control-label"></label>
                        <span asp-validation-for="Note" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <!-- Submit -->
            <div class="row justify-content-center mt-4">
                <div class="col-md-6 text-center">
                    <input type="submit" value="Create" id="btnSubmit" class="btn btn-primary" />
                    <partial name="_BackToList" />
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/multiselect.js"></script>

    <script>
        function filterByCity() {
            const chapterSelect = document.getElementById('Filter').value;
            fetch(`/Rehearsal/GetSingersByChapter?chapterSelect=${chapterSelect}`)
                .then(response => response.json())
                .then(data => {
                    const availOptions = document.getElementById('availOptions');
                    availOptions.innerHTML = "";
                    data.forEach(singer => {
                        const option = document.createElement('option');
                        option.value = singer.id;
                        option.text = singer.displayText;
                        availOptions.appendChild(option);
                    });
                })
                .catch(error => console.error('Error fetching singers:', error));
        }
    </script>
}
