@model IEnumerable<TomorrowsVoice_Toplevel.Models.Volunteering.Shift>
<form asp-action="Index" method="get">
    <div class="form-horizontal my-3">
        <div class="row align-items-center">
            <h1 class="col m-0">Shifts</h1>
            <a asp-action="Create" class="btn btn-primary col-auto h-100" style="float: right;"></i> Add @ViewData["ControllerFriendlyName"]</a>
        </div>
    </div>
    <button class="btn col-auto h-100 @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle"
            data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
        <i class="bi bi-filter"></i> Filter @ViewData["numberFilters"]
    </button>
    <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
        <div class="card d-inline-flex w-100 align-items-end bg-light" style="flex-direction:row !important;">
          
            <div class="p-2">
                <label class="control-label" for="FilterStartDate">Start Date:</label>
                <input class="form-control" type="date" id="FilterStartDate" name="FilterStartDate" max="9999-12-12" value="@ViewData["StartDate"]" aria-invalid="false">
            </div>
            <div class="p-2">
                <label class="control-label" for="FilterEndDate">End Date:</label>
                <input class="form-control" type="date" id="FilterEndDate" name="FilterEndDate" max="9999-12-12" value="@ViewData["EndDate"]" aria-invalid="false">
            </div>
           <div class="p-2">
               <label class="control-label" for="DirectorID">Select by Event:</label>
							@Html.DropDownList("EventID", null, "All Event", htmlAttributes: new { @class = "form-control", id = "EventID" })
							
						</div>
            <div class="p-2">
                <strong><label class="control-label" for="StatusFilter">Status</label></strong>
                @Html.DropDownList("StatusFilter", (SelectList)ViewBag.StatusList,
                         "Any", htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="p-2 ms-auto">
                <button type="submit" name="actionButton" value="Apply" class="btn btn-outline-primary">
                    <i class=" bi bi-funnel-fill"></i>Apply
                </button>
            </div>
            <div class="p-2">
                <a asp-action="Index" class="btn btn-outline-dark"><i class="bi bi-eraser-fill"></i> Clear</a>
            </div>
        </div>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ShiftDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VolunteersNeeded)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Event)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Event)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.TimeSummary)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VolunteersLeft)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Event.Name)
                    </td>

                    <td>



                        @if (item.ShiftDate <= DateTime.Today)
						{
                            <button type="button" class="btn btn-primary col-auto h-100 trackPerformanceBtn"
                                        data-shiftid="@item.ID" data-bs-toggle="modal" data-bs-target="#performanceModal">
                                    Track Performance
                                </button>
						}
						else
						{
                            <button type="button" class="btn btn-primary btn-secondary trackPerformanceBtn"
                                    data-shiftid="@item.ID" data-bs-toggle="modal" data-bs-target="#performanceModal" 
                                    disabled>
                                Track Performance
                            </button>
						}
                   
                    </td>
                    <td>
                        @if (item.Status != Status.Archived)
                        {
                            <partial name="_CrudIcons" model="@item.ID" />
                        }
                        else
                        {
                            <partial name="_CrudIconsRecover" model="@item.ID" />
                        }
                    </td>
                </tr>


            }
        </tbody>
    </table>
     <partial name="_PagingNavBar" />
    <!-- Performance Tracking Modal -->
    <div class="modal fade" id="performanceModal" tabindex="-1" aria-labelledby="performanceModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="performanceModalLabel">Track Performance</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="performanceModalContent">
                        <p class="text-center text-muted">Loading...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

</form>
@section Scripts {


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {

            $(document).on("click", ".trackPerformanceBtn", function () {
                let shiftId = $(this).data("shiftid");
                $("#performanceModalContent").html('<p class="text-center text-muted">Loading...</p>');

                $.get(`/Shift/TrackPerformance/${shiftId}`, function (data) {
                    $("#performanceModalContent").html(data);

                    if ($("#performanceModalContent #ShiftID").length === 0) {
                        $("#performanceModalContent").append(`<input type="hidden" id="ShiftID" value="${shiftId}" />`);
                    } else {
                        $("#performanceModalContent #ShiftID").val(shiftId);
                    }

                }).fail(function () {
                    console.error("❌ Error loading performance data.");
                    $("#performanceModalContent").html('<p class="text-danger">Error loading performance data. Please try again.</p>');
                });
            });



            $(document).on("click", "#savePerformance", function () {
                console.log("🔹 Save button clicked!");

                let shiftId = $("#ShiftID").val();
                if (!shiftId) {
                    console.error("❌ ShiftID is missing!");
                    alert("Error: ShiftID is missing.");
                    return;
                }

                let enrollments = [];
                $("#performanceTable tbody tr").each(function () {
                    let row = $(this);
                    let enrollment = {
                        UserID: row.find("input[name='UserID']").val(),
                        ShiftID: shiftId,
                        ShowOrNot: row.find("input[name='ShowOrNot']").prop("checked"),
                        StartAt: row.find("input[name='StartAt']").val()+":00",  
                        EndAt: row.find("input[name='EndAt']").val() + ":00"     
                    };


                    enrollments.push(enrollment);
                });


                $.ajax({
                    url: "/Shift/UpdatePerformance",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(enrollments),
                    success: function (response) {
                        if (response.success) {
                            alert("Performance updated successfully.");
                            location.reload();
                        } else {
                            alert("Error: " + response.message);
                        }
                    },
                    error: function (xhr) {
                        console.error("❌ AJAX Error:", xhr.responseText);
                        alert("An error occurred while updating performance.");
                    }
                });
            });

        });
    </script>
}
