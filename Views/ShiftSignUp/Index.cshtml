@model IEnumerable<TomorrowsVoice_Toplevel.Models.Volunteering.Shift>

@{
    ViewData["Title"] = "Index";
}
@{

	Layout = "~/Views/Shared/_EventAdminLayout.cshtml";

}

<h1>Select a Shift</h1>
<form asp-action="Index" method="get">
	<input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
	<input type="hidden" name="sortField" value="@ViewData["sortField"]" />
	<div class="form-horizontal">
		<button class="btn @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
			Filter/Search @ViewData["numberFilters"]
		</button><br />
		<div class="collapse  @ViewData["ShowFilter"]" id="collapseFilter">
			<div class="card card-body bg-light">
				<div class="row">
					<div class="form-floating col-md-3">
						@Html.DropDownList("CityID", null, "All Cities", htmlAttributes: new { @class = "form-control", id = "CityID" })
						<label class="control-label" for="CityID">Select by City:</label>
					</div>
					<div class="form-floating col-md-3">
						@Html.DropDownList("EventID", null, "All Events", htmlAttributes: new { @class = "form-control", id = "EventID" })
						<label class="control-label" for="CityID">Select by Event:</label>
					</div>
				</div>
				<div class="row mt-4">
					<div class="form-floating col-md-3">
						<input class="form-control" type="date" id="StartDate" name="StartDate" max="9999-12-12" value="@ViewData["StartDate"]" aria-invalid="false">
						<label class="control-label" for="StartDate">Start Date:</label>

					</div>
					<div class="form-floating col-md-3">
						<input class="form-control" type="date" id="EndDate" name="EndDate" max="9999-12-12" value="@ViewData["EndDate"]" aria-invalid="false">
						<label class="control-label" for="EndDate">End Date:</label>

					</div>
					<div class="col-md-3 d-flex justify-content-evenly">
						<input type="submit" name="actionButton" value="Filter"
							   class="btn btn-outline-primary" />
						<a asp-action="Index" class="btn btn-outline-dark">Clear</a>
					</div>
				</div>

			</div>
		</div>
	</div>
	<h5 style="margin-top:10px">@ViewData["ShiftCount"] Shifts available between @ViewData["StartDate"] and @ViewData["EndDate"]</h5>
	<table class="table">
		<thead>
			<tr>
				<th>
					@Html.DisplayNameFor(model => model.Event)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.ShiftDate)
				</th>
				<th>
					Time
				</th>
				<th>
					@Html.DisplayNameFor(model => model.VolunteersNeeded)
				</th>

				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.Event.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.ShiftDate)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.StartAt) - @Html.DisplayFor(modelItem => item.EndAt)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.VolunteersLeft)
					</td>
					<td>
						<a asp-action="Details" asp-controller="Shift" asp-route-id="@item.ID">Sign Up</a>
					</td>
				</tr>
			}
		</tbody>
	</table>

	<partial name="_PagingNavBar" />
</form>

@section Scripts{
	<script src="~/js/eventCalendar.js"></script>
@* 	<script>
		var modal = document.getElementById("shiftModal");

		// Get the button that opens the modal
		document.querySelectorAll("#btnShift").forEach(function (element) {
			element.onclick = function () {
				modal.style.display = "block";
				// ViewData["Date"] = ;
			}
		});


		// Get the <span> element that closes the modal
		var span = document.getElementsByClassName("close")[0];

		// When the user clicks on the button, open the modal

		// When the user clicks on <span> (x), close the modal
		span.onclick = function () {
			modal.style.display = "none";
		}

		// When the user clicks anywhere outside of the modal, close it
		window.onclick = function (event) {
			if (event.target == modal) {
				modal.style.display = "none";
			}
		}
	</script> *@
}

