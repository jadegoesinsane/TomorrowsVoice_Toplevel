@model IEnumerable<TomorrowsVoice_Toplevel.Models.Volunteering.Shift>
@{
	var volunteer = (TomorrowsVoice_Toplevel.Models.Volunteering.Volunteer)ViewBag.Volunteer;
}

@foreach (var item in Model)
{
	<li class="p-1 row align-items-center m-2 rounded-3" style="border:1px solid #e9ecef;">
		<label class="text-center fw-bold fs-5 col-1 hstack p-0 justify-content-evenly" style="border-right:2px solid @item.Colour.BackgroundColour;">
			<span class="">@item.ShiftDate.ToString("MMM")</span>
			<span class="ms-2">
				@item.ShiftDate.ToString("ddd")
				<br />
				@item.ShiftDate.Day
			</span>
		</label>
		<div class="col row">
			<h3 class="col-12">
				@if (!String.IsNullOrWhiteSpace(item.Title))
				{
					@($"{item.Event?.Name} ({item.Title})")
				}
				else
				{
					@item.Event?.Name
				}
			</h3>
			<p class="row col-12" style="margin-bottom: 0px !important;">
				<span class="col-3">
					<i class="bi bi-clock"></i>
					@($"{item.StartAt.ToString(item.StartAt.Minute == 0 ? "%htt" : "h:mmtt").ToLower()} to {item.EndAt.ToString(item.EndAt.Minute == 0 ? "%htt" : "h:mmtt").ToLower()}")
				</span>
				<span class="col">
					<i class="bi bi-geo-alt"></i>
					@if (!String.IsNullOrWhiteSpace(item.Location))
					{
						@($"{item.Location} ⋅ ")
					}
					@item.Event?.Location
				</span>
			</p>
		</div>
		<div class="col-auto ms-auto row">
			@if (item.EndAt > DateTime.Now)
			{
				<div class="col-auto">
					@if (item.ShiftDate < DateTime.Today.AddDays(2))
					{
						<a class="btn btn-outline-danger add btn-secondary disabled"
						   asp-controller="Volunteer"
						   asp-action="EmailNotice"
						   asp-route-volunteerId="@volunteer?.ID"
						   asp-route-shiftId="@item.ID"
						   style="pointer-events: none; opacity: 0.5;">
							Cancel Shift
						</a>
					}
					else
					{
						<a class="btn btn-outline-danger add" data-bs-toggle="modal" data-bs-target="#joinShiftModal-@item.ID">Cancel Shift</a>
					}
				</div>
			}
			<div class="col-auto">
				@if (item.ShiftDate <= DateTime.Today)
				{
					@if (item.UserShifts.Where(a => a.UserID == volunteer.ID && a.WorkingHourRecorded == true).Any())
					{
						<button type="button" class="btn btn-primary btn-secondary trackPerformanceBtn"
								data-shiftid="@item.ID" data-bs-toggle="modal" data-bs-target="#performanceModal"
								disabled>
							Record Hours
						</button>
					}
					else
					{
						<button type="button" class="btn btn-primary h-100 trackPerformanceBtn"
								data-shiftid="@item.ID" data-volunteerid="@volunteer.ID" data-bs-toggle="modal" data-bs-target="#performanceModal">
							Record Hours
						</button>
					}
				}
			</div>
			@await Html.PartialAsync("_SignOffShiftModal", item)
		</div>
	</li>
}